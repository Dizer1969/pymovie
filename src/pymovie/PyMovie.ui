<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1072</width>
    <height>996</height>
   </rect>
  </property>
  <property name="font">
   <font>
    <family>.SF NS Text</family>
    <pointsize>13</pointsize>
   </font>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="toolTipDuration">
   <number>-1</number>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QGridLayout" name="gridLayout">
    <item row="0" column="0">
     <widget class="QSplitter" name="splitterThree">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <widget class="QSplitter" name="splitterTwo">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <widget class="QWidget" name="">
        <layout class="QVBoxLayout" name="verticalLayout_12">
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_10" stretch="1,2,2">
           <item>
            <widget class="QPushButton" name="infoButton">
             <property name="minimumSize">
              <size>
               <width>40</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>16777215</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking on this button will open a pdf file that provides version history. The most recent version change description will be at the top and so relevant for the version that is currently running.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Info</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="selectAviWcsFolderButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;An AVI-WCS folder is a container for a single observation video and its related files. As such, there must be only a single .avi file in the folder either explicitly, or by shortcut (Windows) or alias (MacOS). This requirement is enforced.&lt;/p&gt;&lt;p&gt;This folder also holds a simple text file that contains the Ra and DEC coordinates of the occulted star, filled in by the user through a dialog box that appears when this position information file is found missing.&lt;/p&gt;&lt;p&gt;This folder is also where the WCS calibration data will be placed if the user opts for calibrating frame 0 by making an on-line submission to astrometry.net.&lt;/p&gt;&lt;p&gt;This folder is also the default location for storing csv files and copies of the last lightcurve plots.&lt;/p&gt;&lt;p&gt;Note: avi files are read using OpenCV which employs ffmpeg to do the actual file reading. As a result, a wide range of avi codecs are standardly available.&lt;/p&gt;&lt;p&gt;In particular, avi files using Lagarith compression will be read without problem.&lt;/p&gt;&lt;p&gt;There is a remote possibility that an avi was recorded with an unusual codec and so fail to be read by PyMovie. In that case, you will need to use an external file conversion program that can decode the file as recorded and rewrite it using a more common codec.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Select AVI-WCS folder</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="readFitsFolderButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;A &lt;span style=&quot; color:#fc0107;&quot;&gt;FITS&lt;/span&gt; folder should contain a set of *.fits files, all from a single recording.&lt;/p&gt;&lt;p&gt;There should be no other .fits files in that folder.&lt;/p&gt;&lt;p&gt;It is assumed that the alphabetic ordering of the file names corresponds to sequential frames.&lt;/p&gt;&lt;p&gt;There is a button titled &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Show FITS metadata&lt;/span&gt; at the bottom left of this panel that will read and display in the text box (lower left corner) all the metadata entries from the currently displayed .fits file image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="toolTipDuration">
              <number>0</number>
             </property>
             <property name="statusTip">
              <string/>
             </property>
             <property name="text">
              <string>Select FITS folder</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_12" stretch="2,2">
           <property name="spacing">
            <number>-1</number>
           </property>
           <item>
            <widget class="QPushButton" name="openBmpPushButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button opens a 'finder&amp;quot; image.&lt;/p&gt;&lt;p&gt;What is anticipated is that this image, perhaps prepared by RegiStax or by PyMovie itself, will be used as a star locator for an avi that will be loaded next.&lt;/p&gt;&lt;p&gt;For this reason, any apertures placed on the image will be preserved and placed automatically on the subsequent avi.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Open &quot;finder&quot; image</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="readAviFileButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Note: avi files are read using OpenCV which employs ffmpeg to do the actual file reading. As a result, a wide range of avi codecs are standardly available.&lt;/p&gt;&lt;p&gt;In particular, avi files using Lagarith compression will be read without problem.&lt;/p&gt;&lt;p&gt;There is a remote possibility that an avi was recorded with an unusual codec and so fail to be read by PyMovie. In that case, you will need to use an external file conversion program that can decode the file as recorded and rewrite it using a more common codec.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Open AVI file</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_3">
           <item>
            <widget class="QCheckBox" name="invertImagesCheckBox">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click this button to invert the Y axes on the main image as well as the two thumbnails.&lt;/p&gt;&lt;p&gt;This control is necessary because: the origin of composite vide images is the upper left corner of the image; for .fits files, the origin is at the lower left corner of the image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Invert images</string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer_8">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QCheckBox" name="showImageControlCheckBox">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If this box is checked, an image control widget will appear to the right of the main image.&lt;/p&gt;&lt;p&gt;This widget shows a useful/interesting histogram of the image pixel values and gives you the ability to change how pixel values are mapped to the black-to-white grayscale.&lt;/p&gt;&lt;p&gt;To change the pixel mappings, click and drag the horizontal bars (in the left portion of the widget) that enclose the histogram display and that connect visually to the black-white colorbar.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; changes made via this control do &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;not&lt;/span&gt; affect the data that is used for generating lightcurves. It only changes what you see in the main image display. But when you right click on the main image and select 'export', the display values are what gets exported; this is the &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;only&lt;/span&gt; time that 'display' values are used.&lt;/p&gt;&lt;p&gt;Until this image control is opened, the grayscale mapping of each image changes based on the minimum and maximum pixel values in that image. This automatic rescaling is usually acceptable but can cause apparent 'flashing' of the images during playback. Opening and then closing this image control will freeze the automatic rescaling.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; if you do not close the image control, when you return to the frame that was used to decide the desired settings, the settings are automatically reset --- this is not a useful behavior, so ... Best practice: activate the control; adjust the sliders; close the control.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Show image contrast control</string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QPushButton" name="editAperturesButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button brings up a table that contains a row for each aperture that has been placed on the image. The columns list the available properties of an aperture. All property values except x,y can be changed from this dialog box.&lt;/p&gt;&lt;p&gt;Any changes made through this dialog take effect when the dialog is closed. Any data entry errors will be reported at close as well.&lt;/p&gt;&lt;p&gt;Columns for color, joggable, auto textOut, and thumbnail source have right-click context menus for making changes in those cells.&lt;/p&gt;&lt;p&gt;The columns for name, thresh, def mask radius, and csv output order are edited by highlighting the cell (single or double click) and then typing the new value. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;!!! When editing the value in a cell, the edit is NOT complete until you leave that cell. Make it a practice to 'tab out' of a cell that you have modified. (but not needed for a cell that has been modified by a right-click context menu) !!!&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;Constraints on property values:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- name: none&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- thresh: positive integer&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- def mask radius: minimum value of 2.00  (initial value is 5.3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- color: only one green allowed and no more than two yellows&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- thumbnail source: only a single aperture can be set as the thumbnail source&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;---- csv output order: positive integer (it's up to you to avoid duplicates!)&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Examine/change aperture settings</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout">
           <item>
            <spacer name="horizontalSpacer_7">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QDoubleSpinBox" name="defRadiusSpinner">
             <property name="minimum">
              <double>2.000000000000000</double>
             </property>
             <property name="maximum">
              <double>24.000000000000000</double>
             </property>
             <property name="singleStep">
              <double>0.500000000000000</double>
             </property>
             <property name="value">
              <double>5.300000000000000</double>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="maskRadiusLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If there is a 'green' aperture showing, changing this spinner, either through the up/down tabs or by direct edit, will update the default mask radius for that aperture. &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Thumbnail Two&lt;/span&gt; in the lower right corner will update dynamically to show the effect of the change on the binary sample mask generation.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Set radius (pixels) of default mask</string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer_3">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QLabel" name="setMskthLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If there is a currently 'green' aperture showing, its threshold value will be set to any new value from this spinner and &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Thumbnail Two&lt;/span&gt; in the lower right corner will update dynamically to show the effect of the change on the binary sample mask generation.&lt;/p&gt;&lt;p&gt;The mask threshold is always set as counts above average background.  A good starting point for setting this value is to set it equal to the background noise (found in the column labelled &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;bkstd&lt;/span&gt; in the text box) rounded up. The program tries to do this automatically so, in most cases, this value will already be preset. This is sometimes referred to as &lt;span style=&quot; color:#0000ff;&quot;&gt;'setting the threshold to 1 sigma'&lt;/span&gt;.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>set mskth counts above bkavg</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QSpinBox" name="threshValueEdit">
             <property name="toolTip">
              <string/>
             </property>
             <property name="maximum">
              <number>99999</number>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_6">
           <property name="spacing">
            <number>0</number>
           </property>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_7">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QPushButton" name="backSmallButton">
               <property name="maximumSize">
                <size>
                 <width>120</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump back 25 frames.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>&lt; 25 frames</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="backBigButton">
               <property name="maximumSize">
                <size>
                 <width>120</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump back 200 frames.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>&lt; 200 frames</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_8">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QPushButton" name="forwardSmallButton">
               <property name="maximumSize">
                <size>
                 <width>120</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump forward 25 frames.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>25 frames &gt;</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="forwardBigButton">
               <property name="maximumSize">
                <size>
                 <width>120</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Jump forward 200 frames.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>200 frames &gt;</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_3">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QLabel" name="currentFrameLabel">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="minimumSize">
                <size>
                 <width>0</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>16777215</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This box controls which frame is currently being analyzed. It can be changed by direct entry or by use of the spinner control buttons.&lt;/p&gt;&lt;p&gt;This will be the starting frame for an extraction triggered by clicking on the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Start analysis&lt;/span&gt; radio button to the right.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="layoutDirection">
                <enum>Qt::LeftToRight</enum>
               </property>
               <property name="text">
                <string> Current frame:</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="margin">
                <number>0</number>
               </property>
               <property name="indent">
                <number>-1</number>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QLabel" name="stopAtFrameLabel">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="minimumSize">
                <size>
                 <width>0</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>16777215</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This box controls which frame will be the final frame in a lightcurve extraction.&lt;/p&gt;&lt;p&gt;At initial file read, this box will be populated with the highest available frame number.&lt;/p&gt;&lt;p&gt;Should you change the value in this box and wish to reset it back to the correct maximum frame number, click on the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Set max stop frame&lt;/span&gt; button located below and to the left.&lt;/p&gt;&lt;p&gt;Note: the value here can be less than than that in the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Current frame&lt;/span&gt; entry. In that case, when an analysis is started, it will proceed 'backwards' from higher numbered frames to lower numbered frames. When running 'backwards', the analysis stops 1 frame before the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Stop at frame&lt;/span&gt; value to make it convenient to run from both ends without duplicating the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Stop at frame&lt;/span&gt;. &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Stop at frame:</string>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_4">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QSpinBox" name="currentFrameSpinBox">
               <property name="enabled">
                <bool>true</bool>
               </property>
               <property name="sizePolicy">
                <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="minimumSize">
                <size>
                 <width>100</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>73</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string/>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="maximum">
                <number>99999</number>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QSpinBox" name="stopAtFrameSpinBox">
               <property name="sizePolicy">
                <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
                 <horstretch>0</horstretch>
                 <verstretch>0</verstretch>
                </sizepolicy>
               </property>
               <property name="minimumSize">
                <size>
                 <width>100</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>73</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string/>
               </property>
               <property name="alignment">
                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
               </property>
               <property name="maximum">
                <number>99999</number>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <spacer name="horizontalSpacer_6">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_6">
             <property name="leftMargin">
              <number>16</number>
             </property>
             <property name="rightMargin">
              <number>0</number>
             </property>
             <item>
              <widget class="QRadioButton" name="runRadioButton">
               <property name="minimumSize">
                <size>
                 <width>0</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>16777215</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this radio button will start an automatic lightcurve extraction, starting at the current frame number and ending at the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Stop at frame&lt;/span&gt; number.&lt;/p&gt;&lt;p&gt;The current frame number is dynamically updated to show the progress of the extraction.&lt;/p&gt;&lt;p&gt;The &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Pause&lt;/span&gt; radio can be used to suspent the lightcurve extraction without loss of data.&lt;/p&gt;&lt;p&gt;Note that an analysis can be run 'backwards' by setting the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Stop at frame&lt;/span&gt; value less than the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Current frame&lt;/span&gt; entry.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="layoutDirection">
                <enum>Qt::LeftToRight</enum>
               </property>
               <property name="text">
                <string>Start analysis </string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QRadioButton" name="pauseRadioButton">
               <property name="minimumSize">
                <size>
                 <width>0</width>
                 <height>0</height>
                </size>
               </property>
               <property name="maximumSize">
                <size>
                 <width>16777215</width>
                 <height>16777215</height>
                </size>
               </property>
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this radio button while a lightcurve extraction is in progress will stop the extraction, without loss of data.&lt;/p&gt;&lt;p&gt;You can subsequently click on the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Run&lt;/span&gt; radio button to resume the lightcurve extraction.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="layoutDirection">
                <enum>Qt::LeftToRight</enum>
               </property>
               <property name="text">
                <string>Pause analysis</string>
               </property>
               <property name="checked">
                <bool>true</bool>
               </property>
              </widget>
             </item>
            </layout>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_7">
           <item>
            <widget class="QPushButton" name="setMaxStopButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Click this button to restore the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Stop at frame&lt;/span&gt; number to the maximum available frame number.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Set max stop frame</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="displayPlotsButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button triggers the production of a set of plots that provides a visual summary of the aperture data collected.&lt;/p&gt;&lt;p&gt;These plots make use of the name that you have assigned to each aperture (you did do that didn't you?). While there is an automatic unique name given to each aperture at creation time, providing user-friendly aperture names will help greatly in identifying the plots and is particularly useful in identifying csv file columns.&lt;/p&gt;&lt;p&gt;Apertures can be renamed at any time without losing any data, so please make use of this feature: it will make consumers of your lightcurves happy.&lt;/p&gt;&lt;p&gt;A composite plot is produced that contains the lightcurves for all of the apertures on a single plot.&lt;/p&gt;&lt;p&gt;Then a plot for each individual aperture is produced. This plot has two parts: a large 'signal intensity' suplot at the top and a smaller 'number of mask pixels' subplot at the bottom.&lt;/p&gt;&lt;p&gt;In the individual plots a symbol code is used to indicate when a default mask was used. Instead of a colored circle for signal intensity, a black triangle is used instead to indicate that the mask used in measuring this point's intensity was not computed from the image but was instead a 'default' of some kind.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Display plots</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QCheckBox" name="cascadeCheckBox">
             <property name="maximumSize">
              <size>
               <width>80</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="sizeIncrement">
              <size>
               <width>0</width>
               <height>0</height>
              </size>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If checked, lightcurve plots will cascade from the upper left of the monitor diagonally toward the lower right.&lt;/p&gt;&lt;p&gt;If unchecked, lightcurve plots will stack on top of each other in the center of the monitor.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="layoutDirection">
              <enum>Qt::RightToLeft</enum>
             </property>
             <property name="text">
              <string>cascade</string>
             </property>
             <property name="checked">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QPushButton" name="writeCsvButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button opens a Save File dialog. Use this dialog to name and, optionally select the directory where you wish the csv file to be written. The default directory is the directory from which the video data was read.&lt;/p&gt;&lt;p&gt;A set of columns is created for each aperture with the column naming incorporating the aperture name for identification.&lt;/p&gt;&lt;p&gt;Hopefully you named each aperture in a logical manner. While there is an automatic unique name given to each aperture at creation time, providing user-friendly aperture names will help greatly in identifying the csv file columns.&lt;/p&gt;&lt;p&gt;Apertures can be renamed at any time without losing any data, so please make use of this feature: it will make consumers of your csv file happy.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Write csv</string>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_8">
           <item>
            <widget class="QComboBox" name="roiComboBox">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Maximum" vsizetype="Fixed">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="minimumSize">
              <size>
               <width>80</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>80</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This drop-down selection box changes the measurement aperture size.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; it is a reqirement that all apertures be the same size during a lightcurve extraction, so changing the aperture size will automatically remove all existing apertures.&lt;/p&gt;&lt;p&gt;If there is substantial wind shake in the video, you should select an aperture size sufficent to contain the 'wanderings' of the star you have selected for tracking or, if there is no tracking star, then the target star itself.&lt;/p&gt;&lt;p&gt;If there is no significant wind shake, use of a smaller aperture (like 31) may be more useful in dealing with dense star fields.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="currentText">
              <string/>
             </property>
             <property name="currentIndex">
              <number>-1</number>
             </property>
             <property name="maxVisibleItems">
              <number>3</number>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="selectApertureSizeLabel">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This drop-down selection box changes the measurement aperture size.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Note:&lt;/span&gt; it is a reqirement that all apertures be the same size during a lightcurve extraction, so changing the aperture size will automatically remove all existing apertures.&lt;/p&gt;&lt;p&gt;If there is substantial wind shake in the video, you should select an aperture size sufficent to contain the 'wanderings' of the star you have selected for tracking or, if there is no tracking star, then the target star itself.&lt;/p&gt;&lt;p&gt;If there is no significant wind shake, use of a smaller aperture (like 31) may be more useful in dealing with dense star fields.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Select aperture size</string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer_5">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QLabel" name="plotSymbolSizeLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This spinner sets the size of the symbols used in the plots to show a data value position. &lt;/p&gt;&lt;p&gt;If you open a set of plots and would like to see smaller or larger dots, simply close the plots, change the symbol size using this spinner and reopen the plots.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Plot symbol size:</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QSpinBox" name="plotSymbolSizeSpinBox">
             <property name="toolTip">
              <string/>
             </property>
             <property name="minimum">
              <number>1</number>
             </property>
             <property name="maximum">
              <number>20</number>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_9"/>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_14">
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_5">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <widget class="QCheckBox" name="viewFieldsCheckBox">
               <property name="enabled">
                <bool>false</bool>
               </property>
               <property name="text">
                <string>View avi fields</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QCheckBox" name="processAsFieldsCheckBox">
               <property name="enabled">
                <bool>true</bool>
               </property>
               <property name="text">
                <string>Process avi in field mode</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QRadioButton" name="topFieldFirstRadioButton">
               <property name="enabled">
                <bool>true</bool>
               </property>
               <property name="text">
                <string>top field is first in time</string>
               </property>
               <property name="checked">
                <bool>false</bool>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QRadioButton" name="bottomFieldFirstRadioButton">
               <property name="enabled">
                <bool>true</bool>
               </property>
               <property name="text">
                <string>bottom field is first in time</string>
               </property>
               <property name="checked">
                <bool>true</bool>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QCheckBox" name="useYellowMaskCheckBox">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If there is significant wind shake during the occultation, the use of a default circular mask is inappropriate because we know that the star image is not circular but rather more snake-like.&lt;/p&gt;&lt;p&gt;However, it is reasonable to expect that the wanderings of the tracking star are the same as the wanderings of the target star and so a mask computed from the tracking star, while it will probably contain more pixels than one might like, has the correct shape to be used for the target star as well.&lt;/p&gt;&lt;p&gt;Checking this box will cause the 'yellow' mask to be used for measuring all target images.&lt;/p&gt;&lt;p&gt;This is a 'last hope' option: good luck with it.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>yellow mask = default</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_11">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_5">
               <property name="spacing">
                <number>0</number>
               </property>
               <item>
                <spacer name="horizontalSpacer_4">
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>40</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <widget class="QLabel" name="ucac4Label">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The entry here must be of the form XXX-XXXXXX otherwise you will get a 'star not found' message instead of the coordinates you were seeking.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>UCAC4</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLineEdit" name="starIdEdit">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The entry here &lt;span style=&quot; text-decoration: underline;&quot;&gt;must&lt;/span&gt; be of the form XXX-XXXXXX otherwise you will get a 'star not found' message instead of the coordinates you were seeking.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="queryVizierButton">
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button triggers a query to Vizier for the J2000 coordinates of a UCAC4 star. The coordinates found are displayed in the edit box below in hms dms format.&lt;/p&gt;&lt;p&gt;The UCAC4 caltalog is used (VizieR catalog I/322A)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Query VizieR</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_13">
               <property name="spacing">
                <number>0</number>
               </property>
               <item>
                <spacer name="horizontalSpacer_9">
                 <property name="orientation">
                  <enum>Qt::Horizontal</enum>
                 </property>
                 <property name="sizeHint" stdset="0">
                  <size>
                   <width>40</width>
                   <height>20</height>
                  </size>
                 </property>
                </spacer>
               </item>
               <item>
                <widget class="QLineEdit" name="coordinatesEdit">
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>260</width>
                   <height>0</height>
                  </size>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QPushButton" name="saveTargetLocButton">
                 <property name="enabled">
                  <bool>false</bool>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you are working in a FITS folder or an AVI-WCS folder, clicking this button causes the location to be written to the file &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;target-location.txt &lt;/span&gt;in that folder.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Set as target</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
            </layout>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_17">
           <property name="spacing">
            <number>0</number>
           </property>
           <item>
            <widget class="QLabel" name="vtiSelectLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This control provides a drop-down list of VTI (video time inserter) models for which OCR (optical character recognition) timestamp processing is available. Selecting an entry will cause a constellation of character extraction boxes to be displayed on the image and there will be an  automatic switch to field view and to a frame other than frame 0 --- which is often an improperly formatted frame with duplicates fields.&lt;/p&gt;&lt;p&gt;If the character selection boxes enclose the correct characters and are well-aligned, then you're ready to go.&lt;/p&gt;&lt;p&gt;If the character boxes are not well aligned, right-click on the/an offending ocr selection box and use the resulting pop-up menu to decide whether one or all ocr boxes need to be moved. The arrow keys control the jogs and their direction.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>select VTI: </string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QComboBox" name="vtiSelectComboBox">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This control provides a drop-down list of VTI (video time inserter) models for which OCR (optical character recognition) timestamp processing is available. Selecting an entry will cause a constellation of character extraction boxes to be displayed on the image (which automatically switches to field view).&lt;/p&gt;&lt;p&gt;If the character selection boxes enclose the correct characters and are well-aligned, then you're ready to go.&lt;/p&gt;&lt;p&gt;If the character boxes are not well aligned, use the jogging buttons to the right to achieve a better alignment.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="currentText">
              <string/>
             </property>
             <property name="currentIndex">
              <number>-1</number>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="vtiSpacerLabel">
             <property name="text">
              <string>     </string>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="horizontalSpacer_10">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
          </layout>
         </item>
         <item>
          <spacer name="verticalSpacer">
           <property name="orientation">
            <enum>Qt::Vertical</enum>
           </property>
           <property name="sizeHint" stdset="0">
            <size>
             <width>20</width>
             <height>40</height>
            </size>
           </property>
          </spacer>
         </item>
         <item>
          <widget class="QLabel" name="label_7">
           <property name="minimumSize">
            <size>
             <width>20</width>
             <height>0</height>
            </size>
           </property>
           <property name="maximumSize">
            <size>
             <width>20</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="text">
            <string/>
           </property>
          </widget>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_11">
           <property name="spacing">
            <number>0</number>
           </property>
           <item>
            <widget class="QPushButton" name="stackFramesButton">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;To assist in locating a dim target star, an enhanced &amp;quot;finder&amp;quot; image can be generated by aligning and stacking (summing) a number of frames.&lt;/p&gt;&lt;p&gt;This intensified image can then be used for positioning an aperture on the target star, even though that star might be invisible in a single frame.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; in order for this procedure to work, it is &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;essential&lt;/span&gt; to remove any timestamp overlay that may be present. That is because, unlike a program like RegiStax that registers frames using star centroids, the procedure used here is to apply the 'Fourier transform phase correlation algorithm' to calculate the pixel offset between the reference frame and the subsequent frames. If there is anything in the image that does not move (like a timestamp), that math calculation will fail and the resulting 'stack' will not be useful --- it will register the frames on the timestamp rather than the star field.&lt;/p&gt;&lt;p&gt;The edit box labelled 'redact lines' specifies how many lines to remove from the bottom of the image to get rid of the timestamp.&lt;/p&gt;&lt;p&gt;The edit box labelled 'num frames' specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;NOTE:&lt;/span&gt; if timestamps were present (but redacted), the &amp;quot;finder&amp;quot; image will show the timestamp of the first frame in the stack, the so-called reference frame that all others are aligned/registered against to build the 'stack'.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Generate &quot;finder&quot; image</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="label_13">
             <property name="minimumSize">
              <size>
               <width>10</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>10</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLineEdit" name="redactLinesEdit">
             <property name="minimumSize">
              <size>
               <width>60</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>60</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="toolTip">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="finderRedactLinesLabel">
             <property name="minimumSize">
              <size>
               <width>85</width>
               <height>0</height>
              </size>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is used to specify how many lines from the image bottom to remove to get rid of the timestamp.&lt;/p&gt;&lt;p&gt;Getting rid of the timestamp is &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;essential&lt;/span&gt; for getting a good image to image registration based on the star field movement. If the timestamp is not removed, then the stacking process will likely register on the timestamp instead.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>redact lines</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="label_14">
             <property name="minimumSize">
              <size>
               <width>10</width>
               <height>0</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLineEdit" name="numFramesToStackEdit">
             <property name="minimumSize">
              <size>
               <width>60</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>60</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="toolTip">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="finderNumFramesLabel">
             <property name="minimumSize">
              <size>
               <width>0</width>
               <height>0</height>
              </size>
             </property>
             <property name="maximumSize">
              <size>
               <width>16777215</width>
               <height>16777215</height>
              </size>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This edit box specifies how many frames to register and sum. For the purpose of locating a star that can produce an occultation light curve, a number of frames in the range of 100 to 400 is effective. If this number is set too high, while the target star might become visible in this enhanced image, it is likely to be lost in quantization and noise effects when frame by frame aperture photometry is attempted.&lt;/p&gt;&lt;p&gt;Of course, your objective might be to get a 'pretty picture' of the star field. If so, have at it, but be aware that stars may 'appear' for which an occultation light curve cannot be extracted when processing is done frame by frame.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>num frames</string>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="label_15">
             <property name="minimumSize">
              <size>
               <width>10</width>
               <height>0</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="label_16">
             <property name="minimumSize">
              <size>
               <width>10</width>
               <height>0</height>
              </size>
             </property>
             <property name="text">
              <string/>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QProgressBar" name="stackerProgressBar">
             <property name="value">
              <number>0</number>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QHBoxLayout" name="horizontalLayout_16">
           <property name="spacing">
            <number>0</number>
           </property>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_9">
             <property name="spacing">
              <number>-1</number>
             </property>
             <item>
              <widget class="QPushButton" name="metadataButton">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button will show (in the text box below) all metadata from the currently displayed .fits file.&lt;/p&gt;&lt;p&gt;'metadata' is the text information that is present in the header of the .fits file.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Show FITS metadata</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="demoMeanPushButton">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;The 'robust' calculation of the background average and the 'robust' estimation of the dispersion (noise) in the background is an important factor in the calculation of signal intensities.&lt;/p&gt;&lt;p&gt;This button demonstrates with a detailed plot the calculation as it was performed for the current 'thumbnail'.&lt;/p&gt;&lt;p&gt;This is meant primarily for education purposes but may be useful in special cases to confirm (or not) that the 'robust' calculations are reasonable.&lt;/p&gt;&lt;p&gt;Note: the scale of dispersion (noise) is calulated using the MAD (Median Absolute Deviation) technique. Making the assumption that the background pixel counts (exclusive of outliers) are drawn from a Gaussian distribution, the bkstd is calculated as 1.4826 * MAD(aperture).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Demo Robust Mean</string>
               </property>
              </widget>
             </item>
             <item>
              <widget class="QPushButton" name="view3DButton">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button opens a new window that shows a 3D rendering of the Thumbnail One image.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Show 3D thumbnail</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <layout class="QVBoxLayout" name="verticalLayout_10">
             <property name="spacing">
              <number>0</number>
             </property>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_4">
               <property name="spacing">
                <number>0</number>
               </property>
               <property name="bottomMargin">
                <number>0</number>
               </property>
               <item>
                <widget class="QPushButton" name="frameToFitsButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="MinimumExpanding" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>220</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>220</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button is used to get a WCS calibration for the current image by utilizing the on-line service nova.astrometry.net&lt;/p&gt;&lt;p&gt;If this service fails (see discussion below) then you could try the&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt; Manual WCS calibration&lt;/span&gt; button. It prompts you to put an aperture around two known stars in your image by using a star chart (preferably with UCAC4 star designations). If those stars are sufficiently far apart, we can use the icrs coordinates in conjuction with the xy position of the aperture to 'calibrate' that image.&lt;/p&gt;&lt;p&gt;nova.astrometry.net is designed to do 'blind' identification and WCS calibration on star field images. But it will not be able to identify images that have a too narrow field of view. If your field of view is under 15 arcmin, it is not likely to be able to calibrate that image and it will spend a long time (many minutes) trying. If an image is going to be successfully identified, it will take only a few seconds of cpu time after getting a job assigned (which takes one to two minutes).&lt;/p&gt;&lt;p&gt;Clicking this button reads the currrent frame and redacts the timestamp area by replacing all bytes in the timestamp zone with the Robust background (constant value).&lt;/p&gt;&lt;p&gt;The number of lines to be redacted are controlled by the &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;redact lines&lt;/span&gt; edit box.&lt;/p&gt;&lt;p&gt;This redacted image is written as a file suitable for submission to nova.astrometry.net together with a user entered target star position (RA and Dec at J2000).&lt;/p&gt;&lt;p&gt;The entries for the star position values are entered into a star position dialog that will appear if no star position has yet been defined.&lt;/p&gt;&lt;p&gt;That same dialog form provides for the entry of the user's nova.astrometry.net api key. This value will be 'sticky' (preserved across runs of PyMovie) and is required for submitting images for WCS calibration. It's easy (and free) to obtain. Simply go to nova.astrometry.net and sign in by clicking on your choice of credential supplier, no need to create a username/password combination. Afer signing in, click on My Profile and your api key will be displayed there.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>astrometry WCS calib</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLineEdit" name="timestampHeightEdit">
                 <property name="minimumSize">
                  <size>
                   <width>60</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>60</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string/>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="astrometryRedactLabel">
                 <property name="minimumSize">
                  <size>
                   <width>70</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This entry is only used when preparing a frame for submission to nova.astrometry.net for WCS calibration.&lt;/p&gt;&lt;p&gt;If there is a timestamp overlay, its presence may make the WCS location and calibration harder (takes longer) for nova.astrometry.net. So, before submitting an image to nova.astrometry.net, we like to 'redact' the timestamp area by replacing the bottom lines with the average background (sampled from the center of the image). The value in this box controls how many lines from the bottom get this treatment.&lt;/p&gt;&lt;p&gt;Entering a negative number will redact lines from the top.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>redact lines</string>
                 </property>
                 <property name="alignment">
                  <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
              <layout class="QHBoxLayout" name="horizontalLayout_15">
               <property name="spacing">
                <number>0</number>
               </property>
               <item>
                <widget class="QPushButton" name="manualWcsButton">
                 <property name="enabled">
                  <bool>true</bool>
                 </property>
                 <property name="sizePolicy">
                  <sizepolicy hsizetype="MinimumExpanding" vsizetype="Fixed">
                   <horstretch>0</horstretch>
                   <verstretch>0</verstretch>
                  </sizepolicy>
                 </property>
                 <property name="minimumSize">
                  <size>
                   <width>220</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>220</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This button starts a 'manual' WCS calibration (user guided reference star designation).&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Manual WCS calibration&lt;/span&gt; utilizes two stars with known icrs coordinates together with their xy position in the image to compute a mapping from icrs coordinates to pixel coordinates.&lt;/p&gt;&lt;p&gt;When this button is pressed, all previous manual WCS calibration data is erased (you have to confirm this action). Then the work flow expected is:&lt;/p&gt;&lt;p&gt;1) Use the VizieR query to get the icrs coordinates of the first reference star. (So do your star chart with UCAC4 annotations).&lt;/p&gt;&lt;p&gt;2) Put an aperture on that star.&lt;/p&gt;&lt;p&gt;3) Adjust (if necessary) the aperture so that the centering is satisfactory.&lt;/p&gt;&lt;p&gt;4) Right click on the aperture and click on &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Set RA Dec (from VizieR query results)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;5) Repeat steps 1...4 for the second reference star.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;6) If you have already defined the target coordinates, an aperture will immediately appear at the proper image location, otherwise ...&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; color:#000000;&quot;&gt;7) ... use the VizieR query to get the target coordintes and then click the &lt;/span&gt;&lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Set as target&lt;/span&gt;&lt;span style=&quot; color:#000000;&quot;&gt; button. The target aperture will then appear.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
                 </property>
                 <property name="text">
                  <string>Manual WCS calib</string>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLineEdit" name="plateScaleEdit">
                 <property name="minimumSize">
                  <size>
                   <width>60</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="maximumSize">
                  <size>
                   <width>60</width>
                   <height>16777215</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string/>
                 </property>
                </widget>
               </item>
               <item>
                <widget class="QLabel" name="manualPlateScaleLabel">
                 <property name="minimumSize">
                  <size>
                   <width>70</width>
                   <height>0</height>
                  </size>
                 </property>
                 <property name="toolTip">
                  <string>This edit box allows a plate scale to be specified for a manual WCS calibration.
Normally, this box should be left empty. The plate scale will then be calculated (and reported for your records) from the two calibration apertures specified.
If you think that you know the plate scale more precisely than what can be calculated from two points (which might necessarily be close together due to a puacity of good stars to use for calibration), then definitely enter that value in this box.</string>
                 </property>
                 <property name="text">
                  <string>plate scale</string>
                 </property>
                </widget>
               </item>
              </layout>
             </item>
             <item>
              <widget class="QPushButton" name="documentationPushButton">
               <property name="toolTip">
                <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking on this button will open a pdf file that provides additional documentation beyond that incorporated in the Hover Help system (which will/should be your first stop for assistance).&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
               </property>
               <property name="text">
                <string>Documentation</string>
               </property>
              </widget>
             </item>
            </layout>
           </item>
           <item>
            <spacer name="horizontalSpacer_2">
             <property name="orientation">
              <enum>Qt::Horizontal</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>40</width>
               <height>20</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QPushButton" name="clearAppDataButton">
             <property name="sizePolicy">
              <sizepolicy hsizetype="Minimum" vsizetype="Preferred">
               <horstretch>0</horstretch>
               <verstretch>0</verstretch>
              </sizepolicy>
             </property>
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Clicking this button deletes all data that has been accumulated in the apertures. (The apertures are 'objects' with properties like color, location, threshold, and also hold the recorded data itself).&lt;/p&gt;&lt;p&gt;It is often the case that one will 'experiment' with the video by running short stretches of it.&lt;/p&gt;&lt;p&gt;All of the data produced while in the 'run' state is accumulated, even when you do it piecemeal. This can cause data points to be recorded multiple times.&lt;/p&gt;&lt;p&gt;Best practice is, before starting a production by setting the starting and stopping frame numbers, that one clears any previous data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>Clear aperture data</string>
             </property>
             <property name="flat">
              <bool>false</bool>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="">
        <layout class="QVBoxLayout" name="verticalLayout_13">
         <item>
          <widget class="ImageView" name="frameView">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
             <horstretch>2</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="toolTip">
            <string/>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="mainImageLabel">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Context menus invoked by the usual mouse right-click are used to place measurement apertures, change their properties, name them, remove them, and control the image view itself.&lt;/p&gt;&lt;p&gt;For controlling the image view itself, a left-click and hold will allow the image to be panned in all directions with subsequent mouse movement.&lt;/p&gt;&lt;p&gt;A right-click and hold allows zooming in the direction of subsequent mouse movement.&lt;/p&gt;&lt;p&gt;A right-click in a region that does not contain a measuring aperture will cause a context menu to appear that has &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add snap-to-blob aperture&lt;/span&gt; and &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add static aperture (no snap)&lt;/span&gt; menu entries. You will almost always be using the 'snap-to-blob' aperture; &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;Add static aperture (no snap&lt;/span&gt;&lt;span style=&quot; font-weight:600;&quot;&gt;)&lt;/span&gt; is used for placing an aperture exactly where you want it (i.e., no snap). This will most commonly be used for placing a &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;white&lt;/span&gt; aperture (see below) and for placing an aperture on a &amp;quot;finder&amp;quot; image.&lt;/p&gt;&lt;p&gt;On this same context menu, there are menu items for controlling aspects of the image view itself; the most used menu item will be &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;View all&lt;/span&gt;, used after a &lt;span style=&quot; font-weight:600; text-decoration: underline; color:#fc0107;&quot;&gt;scroll wheel zoom&lt;/span&gt; or &lt;span style=&quot; text-decoration: underline; color:#fc0107;&quot;&gt;left-click-drag-for-pan&lt;/span&gt; have been used to adjust the view to return the size and position to the original condition.&lt;/p&gt;&lt;p&gt;A right-click &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;inside&lt;/span&gt; a measurement aperture brings up a context menu that allows you to change propertires of the aperture. You will be most concerned with the color of the aperture:&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;yellow&lt;/span&gt; aperture around a bright star causes that star to be used as a tracking reference. If you select a single star as a tracking reference, translation movements (the image as a whole moves some number of pixels up, down, and sideways) of the star field will be tracked. The aperture constellation as a whole will be translated.&lt;/p&gt;&lt;p&gt;You can add a second yellow aperture (no more than two are allowed) if there a possibility of field rotation as well as field translation. In this case, tracking equations are used that allow for the aperture constellation as a whole to be both rotated and translated in order to follow the star field.&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;green&lt;/span&gt; aperture is connected to the threshold setting spinner to make it easier to modify threshold settings. That spinner has the longish title: &lt;span style=&quot; color:#fc0107;&quot;&gt;set mskth counts above bkavg&lt;/span&gt;&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;white&lt;/span&gt; aperture is useful when flash-tags have been recorded in the video. The special thing about a white aperture is that all pixels in the aperture are summed and output as the 'signal' with no background subtraction. Such a signal can be employed by PyOTE to provide an alternative to the timestamp overlay from Video Time Inserters. In addition, a 'white' aperture always stays where placed --- it does not track and is never part of an aperture constellation group.&lt;/p&gt;&lt;p&gt;A &lt;span style=&quot; font-weight:600; text-decoration: underline;&quot;&gt;red&lt;/span&gt; aperture has the special property that it will only form a mask from a blob that is within 8 pixels of the center. This helps keep a nearby bright star from interfering with mask formation..&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Right-click here for image/aperture help</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
      </widget>
      <widget class="QSplitter" name="splitterOne">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <widget class="QWidget" name="">
        <layout class="QVBoxLayout" name="verticalLayout_14">
         <item>
          <widget class="QTextEdit" name="textOut">
           <property name="sizePolicy">
            <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
             <horstretch>1</horstretch>
             <verstretch>0</verstretch>
            </sizepolicy>
           </property>
           <property name="font">
            <font>
             <family>Courier New</family>
             <weight>75</weight>
             <bold>true</bold>
            </font>
           </property>
           <property name="toolTip">
            <string/>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLabel" name="textOutLabel">
           <property name="toolTip">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Here is the 'decoder' for the column headings:&lt;/p&gt;&lt;p&gt;signal = sum of all pixels included in the mask with the background (bkavg) subtracted from each one.&lt;/p&gt;&lt;p&gt;appsum = sum of all pixels included in the mask &lt;/p&gt;&lt;p&gt;bkavg = average background, calculated using a Robust Mean estimator with 50% outlier rejection.&lt;/p&gt;&lt;p&gt;bkstd = standard deviation of the background, calculated using a Robust Scale estimator with 50% outlier rejection (assumes gaussian distribution)&lt;/p&gt;&lt;p&gt;mskth = Thresh used in forming mask. This value is added to bkavg to compute binary mask&lt;/p&gt;&lt;p&gt;mskpx = number of pixels in binary mask - if negative, a default mask was used&lt;/p&gt;&lt;p&gt;cvxhull = convex hull: the area enclosed by a rubber band that surrounds the mask.&lt;/p&gt;&lt;p&gt;xpos = y position of centroid in image coordinates&lt;/p&gt;&lt;p&gt;ypos = x position of centroid in image coordinates&lt;/p&gt;&lt;p&gt;minpx = minimum value pixel contained in the aperture&lt;/p&gt;&lt;p&gt;maxpx = maximum value pixel contained in the aperture&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="text">
            <string>Right-click here for info</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="layoutWidget">
        <layout class="QHBoxLayout" name="horizontalLayout_2">
         <item>
          <layout class="QVBoxLayout" name="verticalLayout_2">
           <item>
            <widget class="ImageView" name="thumbOneView"/>
           </item>
           <item>
            <widget class="QLabel" name="thumbnailOneLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:14pt;&quot;&gt;This panel shows a zoomed version of the image contained within the aperture boundaries.&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Thumbnail One (right-click here for info)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignCenter</set>
             </property>
            </widget>
           </item>
          </layout>
         </item>
         <item>
          <layout class="QVBoxLayout" name="verticalLayout">
           <item>
            <widget class="ImageView" name="thumbTwoView"/>
           </item>
           <item>
            <widget class="QLabel" name="thumbnailTwoLabel">
             <property name="toolTip">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This image shows the mask that will be applied to the image shown in Thumbnail One.&lt;/p&gt;&lt;p&gt;Currently, the 'mask' is dynamically calculated by the following steps: &lt;/p&gt;&lt;p&gt;1) Thumbnail One is blurred using a 5x5 pixel Gaussian.&lt;/p&gt;&lt;p&gt;2) &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;set mskth counts above bkavg&lt;/span&gt; is used to turn the blurred Thumbnail One image into a binary image (only the values 0 and 1 are present) by setting to 0 all pixels that are &amp;lt;= &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;set mskth counts above bkavg &lt;/span&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;+ bkavg&lt;/span&gt; and setting to 1 all pixels that are greater than &lt;span style=&quot; font-weight:600; color:#fc0107;&quot;&gt;set mskth counts above bkavg &lt;/span&gt;&lt;span style=&quot; color:#fc0107;&quot;&gt;+ bkavg&lt;/span&gt;. &lt;/p&gt;&lt;p&gt;3) The resulting binary image is processed to find all 'blobs' (connected groups of pixels with value 1).&lt;/p&gt;&lt;p&gt;4) The signal contained in each blob is computed (with background subtraction).&lt;/p&gt;&lt;p&gt;5) If a tracking star is present and this is a target star (non-yellow aperture), an additional constraint is enforced: the centroid of the 'blob' must lie within a 8 pixel radius of the aperture center. This helps suppress any bright stars that may be in the aperture, but not in the center.&lt;/p&gt;&lt;p&gt;6) The 'blob' found in step 5 is turned into the mask that is displayed in this thumbnail.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Thumbnail Two (right-click here for info)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="alignment">
              <set>Qt::AlignCenter</set>
             </property>
            </widget>
           </item>
          </layout>
         </item>
        </layout>
       </widget>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
  <action name="actionLike_special_settings">
   <property name="text">
    <string>Like special settings</string>
   </property>
  </action>
  <action name="actionOr_preferences">
   <property name="text">
    <string>Or preferences</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ImageView</class>
   <extends>QGraphicsView</extends>
   <header>pyqtgraph</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
</ui>
