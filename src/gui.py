# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PyMovie.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(932, 859)
        MainWindow.setToolTipDuration(-1)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter_3 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_3.setOrientation(QtCore.Qt.Vertical)
        self.splitter_3.setObjectName("splitter_3")
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_3)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.widget = QtWidgets.QWidget(self.splitter_2)
        self.widget.setObjectName("widget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.readFitsFolderButton = QtWidgets.QPushButton(self.widget)
        self.readFitsFolderButton.setToolTipDuration(0)
        self.readFitsFolderButton.setStatusTip("")
        self.readFitsFolderButton.setObjectName("readFitsFolderButton")
        self.verticalLayout_6.addWidget(self.readFitsFolderButton)
        self.readAviFileButton = QtWidgets.QPushButton(self.widget)
        self.readAviFileButton.setObjectName("readAviFileButton")
        self.verticalLayout_6.addWidget(self.readAviFileButton)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.logScalingCheckBox = QtWidgets.QCheckBox(self.widget)
        self.logScalingCheckBox.setEnabled(True)
        self.logScalingCheckBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.logScalingCheckBox.setChecked(True)
        self.logScalingCheckBox.setObjectName("logScalingCheckBox")
        self.horizontalLayout_3.addWidget(self.logScalingCheckBox)
        self.verticalLayout_6.addLayout(self.horizontalLayout_3)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.decThreshButton = QtWidgets.QPushButton(self.widget)
        self.decThreshButton.setObjectName("decThreshButton")
        self.horizontalLayout.addWidget(self.decThreshButton)
        self.incThreshButton = QtWidgets.QPushButton(self.widget)
        self.incThreshButton.setObjectName("incThreshButton")
        self.horizontalLayout.addWidget(self.incThreshButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.threshValueEdit = QtWidgets.QLineEdit(self.widget)
        self.threshValueEdit.setMaximumSize(QtCore.QSize(50, 16777215))
        self.threshValueEdit.setMaxLength(4)
        self.threshValueEdit.setObjectName("threshValueEdit")
        self.horizontalLayout.addWidget(self.threshValueEdit)
        self.verticalLayout_6.addLayout(self.horizontalLayout)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setMinimumSize(QtCore.QSize(89, 0))
        self.label_3.setMaximumSize(QtCore.QSize(89, 16777215))
        self.label_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setIndent(-1)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_3.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setMinimumSize(QtCore.QSize(89, 0))
        self.label_4.setMaximumSize(QtCore.QSize(89, 16777215))
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.horizontalLayout_6.addLayout(self.verticalLayout_3)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.currentFrameSpinBox = QtWidgets.QSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.currentFrameSpinBox.sizePolicy().hasHeightForWidth())
        self.currentFrameSpinBox.setSizePolicy(sizePolicy)
        self.currentFrameSpinBox.setMaximumSize(QtCore.QSize(73, 16777215))
        self.currentFrameSpinBox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.currentFrameSpinBox.setMaximum(99999)
        self.currentFrameSpinBox.setObjectName("currentFrameSpinBox")
        self.verticalLayout_4.addWidget(self.currentFrameSpinBox)
        self.stopAtFrameSpinBox = QtWidgets.QSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stopAtFrameSpinBox.sizePolicy().hasHeightForWidth())
        self.stopAtFrameSpinBox.setSizePolicy(sizePolicy)
        self.stopAtFrameSpinBox.setMaximumSize(QtCore.QSize(73, 16777215))
        self.stopAtFrameSpinBox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.stopAtFrameSpinBox.setMaximum(99999)
        self.stopAtFrameSpinBox.setObjectName("stopAtFrameSpinBox")
        self.verticalLayout_4.addWidget(self.stopAtFrameSpinBox)
        self.horizontalLayout_6.addLayout(self.verticalLayout_4)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.runRadioButton = QtWidgets.QRadioButton(self.widget)
        self.runRadioButton.setMinimumSize(QtCore.QSize(100, 0))
        self.runRadioButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.runRadioButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.runRadioButton.setObjectName("runRadioButton")
        self.verticalLayout_5.addWidget(self.runRadioButton)
        self.pauseRadioButton = QtWidgets.QRadioButton(self.widget)
        self.pauseRadioButton.setMaximumSize(QtCore.QSize(100, 16777215))
        self.pauseRadioButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pauseRadioButton.setChecked(True)
        self.pauseRadioButton.setObjectName("pauseRadioButton")
        self.verticalLayout_5.addWidget(self.pauseRadioButton)
        self.horizontalLayout_6.addLayout(self.verticalLayout_5)
        self.verticalLayout_6.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.setMaxStopButton = QtWidgets.QPushButton(self.widget)
        self.setMaxStopButton.setObjectName("setMaxStopButton")
        self.horizontalLayout_7.addWidget(self.setMaxStopButton)
        self.experimentButton = QtWidgets.QPushButton(self.widget)
        self.experimentButton.setObjectName("experimentButton")
        self.horizontalLayout_7.addWidget(self.experimentButton)
        self.writeCsvButton = QtWidgets.QPushButton(self.widget)
        self.writeCsvButton.setObjectName("writeCsvButton")
        self.horizontalLayout_7.addWidget(self.writeCsvButton)
        self.verticalLayout_6.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.defaultMaskRadiusDoubleSpinBox = QtWidgets.QDoubleSpinBox(self.widget)
        self.defaultMaskRadiusDoubleSpinBox.setMinimum(2.0)
        self.defaultMaskRadiusDoubleSpinBox.setMaximum(20.0)
        self.defaultMaskRadiusDoubleSpinBox.setSingleStep(0.5)
        self.defaultMaskRadiusDoubleSpinBox.setProperty("value", 5.3)
        self.defaultMaskRadiusDoubleSpinBox.setObjectName("defaultMaskRadiusDoubleSpinBox")
        self.horizontalLayout_8.addWidget(self.defaultMaskRadiusDoubleSpinBox)
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_8.addWidget(self.label_2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem3)
        self.verticalLayout_6.addLayout(self.horizontalLayout_8)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem4)
        self.useYellowMaskCheckBox = QtWidgets.QCheckBox(self.widget)
        self.useYellowMaskCheckBox.setObjectName("useYellowMaskCheckBox")
        self.verticalLayout_6.addWidget(self.useYellowMaskCheckBox)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.metadataButton = QtWidgets.QPushButton(self.widget)
        self.metadataButton.setObjectName("metadataButton")
        self.horizontalLayout_5.addWidget(self.metadataButton)
        self.clearAppDataButton = QtWidgets.QPushButton(self.widget)
        self.clearAppDataButton.setObjectName("clearAppDataButton")
        self.horizontalLayout_5.addWidget(self.clearAppDataButton)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.verticalLayout_6.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.infoButton = QtWidgets.QPushButton(self.widget)
        self.infoButton.setObjectName("infoButton")
        self.horizontalLayout_4.addWidget(self.infoButton)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem6)
        self.enableHoverHelpCheckBox = QtWidgets.QCheckBox(self.widget)
        self.enableHoverHelpCheckBox.setObjectName("enableHoverHelpCheckBox")
        self.horizontalLayout_4.addWidget(self.enableHoverHelpCheckBox)
        self.verticalLayout_6.addLayout(self.horizontalLayout_4)
        self.frameView = ImageView(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameView.sizePolicy().hasHeightForWidth())
        self.frameView.setSizePolicy(sizePolicy)
        self.frameView.setToolTip("")
        self.frameView.setObjectName("frameView")
        self.splitter = QtWidgets.QSplitter(self.splitter_3)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.textOut = QtWidgets.QTextEdit(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textOut.sizePolicy().hasHeightForWidth())
        self.textOut.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        font.setBold(True)
        font.setWeight(75)
        self.textOut.setFont(font)
        self.textOut.setObjectName("textOut")
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.thumbOneView = ImageView(self.layoutWidget)
        self.thumbOneView.setObjectName("thumbOneView")
        self.verticalLayout_2.addWidget(self.thumbOneView)
        self.thumbnailOneLabel = QtWidgets.QLabel(self.layoutWidget)
        self.thumbnailOneLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.thumbnailOneLabel.setObjectName("thumbnailOneLabel")
        self.verticalLayout_2.addWidget(self.thumbnailOneLabel)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.thumbTwoView = ImageView(self.layoutWidget)
        self.thumbTwoView.setObjectName("thumbTwoView")
        self.verticalLayout.addWidget(self.thumbTwoView)
        self.thumbnailTwoLabel = QtWidgets.QLabel(self.layoutWidget)
        self.thumbnailTwoLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.thumbnailTwoLabel.setObjectName("thumbnailTwoLabel")
        self.verticalLayout.addWidget(self.thumbnailTwoLabel)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.gridLayout.addWidget(self.splitter_3, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 932, 22))
        self.menubar.setDefaultUp(True)
        self.menubar.setNativeMenuBar(False)
        self.menubar.setObjectName("menubar")
        self.menuBobs_stuff = QtWidgets.QMenu(self.menubar)
        self.menuBobs_stuff.setObjectName("menuBobs_stuff")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionLike_special_settings = QtWidgets.QAction(MainWindow)
        self.actionLike_special_settings.setObjectName("actionLike_special_settings")
        self.actionOr_preferences = QtWidgets.QAction(MainWindow)
        self.actionOr_preferences.setObjectName("actionOr_preferences")
        self.menuBobs_stuff.addAction(self.actionLike_special_settings)
        self.menuBobs_stuff.addSeparator()
        self.menuBobs_stuff.addAction(self.actionOr_preferences)
        self.menubar.addAction(self.menuBobs_stuff.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.readFitsFolderButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>A <span style=\" color:#fc0107;\">FITS</span> folder should contain a set of *.fits files, all from a single recording.</p><p>There should be no other .fits files in that folder.</p><p>It is assumed that the alphabetic ordering of the file names corresponds to sequential frames.</p></body></html>"))
        self.readFitsFolderButton.setText(_translate("MainWindow", "Open FITS folder"))
        self.readAviFileButton.setText(_translate("MainWindow", "Open avi file"))
        self.logScalingCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt;\">\'Checking\' this box scales the pixel values in the image to make details easier to see.</span></p><p><span style=\" font-size:14pt;\">The scaling equation used is:</span></p><p><span style=\" font-family:\'Menlo\'; font-size:13.5pt; color:#000000;\">\n"
"<pre><code>  # x is a 2D matrix of image pixels</code></pre>\n"
"<pre><code>  a = np.min(x) # a will be set to the smallest pixel value in the image</code></pre>\n"
"<pre><code>  b = np.max(x) # b will be set to the highest pixel value in the image</code></pre>\n"
"<pre><code>  # linval will be a 2D matrix (because x is 2D) of pixel values between 10.0 and 990.0</code></pre>\n"
"<pre><code>  linval = 10.0 + 990.0 * (x-float(a))/(b-a)</code></pre>\n"
"<pre><code>  # return a 2D matrix of pixel values log scaled with values between 0.0 and 255.0</span>\n"
"<pre><code>  return (np.log10(linval) - 1.0 * 0.5 * 255.0</pre></code></span><br/></p></body></html>"))
        self.logScalingCheckBox.setText(_translate("MainWindow", "log scale image"))
        self.decThreshButton.setText(_translate("MainWindow", "dec thresh"))
        self.incThreshButton.setText(_translate("MainWindow", "Inc thresh"))
        self.label.setText(_translate("MainWindow", "Thresh"))
        self.threshValueEdit.setText(_translate("MainWindow", "0"))
        self.label_3.setText(_translate("MainWindow", " Current frame:"))
        self.label_4.setText(_translate("MainWindow", "Stop at frame:"))
        self.runRadioButton.setText(_translate("MainWindow", "Run"))
        self.pauseRadioButton.setText(_translate("MainWindow", "Pause"))
        self.setMaxStopButton.setText(_translate("MainWindow", "Set max stop frame"))
        self.experimentButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>This button is used for running experimental code and is used during development.</p><p>If you\'re not the developer, then the developer failed to remove/disable this button before release.</p></body></html>"))
        self.experimentButton.setText(_translate("MainWindow", "Display plots"))
        self.writeCsvButton.setText(_translate("MainWindow", "write csv"))
        self.label_2.setText(_translate("MainWindow", "Set radius of default mask"))
        self.useYellowMaskCheckBox.setText(_translate("MainWindow", "Use mask derived from yellow aperture"))
        self.metadataButton.setText(_translate("MainWindow", "Show FITS metadata"))
        self.clearAppDataButton.setText(_translate("MainWindow", "Clear plot data"))
        self.infoButton.setToolTip(_translate("MainWindow", "Clicking on this button will open a pdf file that provides version history. Additional documentation follows the version history so don\'t fail to scroll down."))
        self.infoButton.setText(_translate("MainWindow", "About"))
        self.enableHoverHelpCheckBox.setToolTip(_translate("MainWindow", "<html><head/><body><p>The best way to use the \'Hover Help\' system employed by this app is to position this dialog box off to one side where it won\'t be covered by the main app window once that has been made active.</p><p>This dialog box will be dynamically updated any time you hover over an item in the main app window that has \'hover help\' text associated with it.</p></body></html>"))
        self.enableHoverHelpCheckBox.setText(_translate("MainWindow", "Enable hover help"))
        self.textOut.setToolTip(_translate("MainWindow", "We will add an explanation for the values printed here (in the future)"))
        self.thumbnailOneLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:14pt;\">This panel shows a zoomed version of the image contained within the aperture boundaries.</span></p></body></html>"))
        self.thumbnailOneLabel.setText(_translate("MainWindow", "Thumbnail One (hover here for info)"))
        self.thumbnailTwoLabel.setToolTip(_translate("MainWindow", "<html><head/><body><p>This image shows the mask that will be applied to the image shown in Thumbnail One.</p><p>Currently, the \'mask\' is dynamically calculated by the following steps: </p><p>1) Thumbnail One is blurred using a 5x5 pixel Gaussian.</p><p>2) A \'threshold\' is calculated as: <span style=\" color:#fc0107;\">thresh</span> = <span style=\" color:#0000ff;\">mean + 3 * std + thresh_adder </span></p><p><span style=\" color:#0000ff;\">thresh_adder </span><span style=\" color:#000000;\">is unique for each aperture: it is set to zero when the aperture is created; it can be increased or decreased by the context menu that each aperture has (right-click menu) </span><span style=\" font-style:italic; color:#000000;\">. </span><span style=\" color:#000000;\">The </span><span style=\" color:#0000ff;\">mean</span><span style=\" color:#000000;\"> and </span><span style=\" color:#0000ff;\">std</span><span style=\" color:#000000;\"> (standard deviation) are extracted from the Thumbnail One image by a Robust mean and scale estimator (scale is a measure of the dispersion/distribution of a data set). Median Absolute Deviation (MAD) is the underlying math of the scale estimation; this is turned into a standard deviation by multiplying MAD by 1.486. This results in a reliable </span><span style=\" color:#0000ff;\">std</span><span style=\" color:#000000;\"> when/if the pixel distribution (ignoring outliers) is Gaussian.</span></p><p>3) <span style=\" color:#fc0107;\">thresh</span> is used to turn the blurred Thumbnail One image into a binary image (only the values 0 and 1 are present) by setting to 0 all pixels that are &lt;= <span style=\" color:#fc0107;\">thresh</span> and setting to 1 all pixels that are greater than <span style=\" color:#fc0107;\">thresh</span>. </p><p>4) The resulting binary image is processed to find all \'blobs\' (connected groups of pixels with value 1).</p><p>5) The largest \'blob\' found in step 4 is turned into the mask that is displayed in this thumbnail.</p></body></html>"))
        self.thumbnailTwoLabel.setText(_translate("MainWindow", "Thumbnail Two (hover here for info)"))
        self.menuBobs_stuff.setTitle(_translate("MainWindow", "We may have something here in the future"))
        self.actionLike_special_settings.setText(_translate("MainWindow", "Like special settings"))
        self.actionOr_preferences.setText(_translate("MainWindow", "Or preferences"))


from pyqtgraph import ImageView
